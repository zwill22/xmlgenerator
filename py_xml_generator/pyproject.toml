[build-system]
requires = ["maturin>=1.9,<2.0"]
build-backend = "maturin"

[project]
name = "pyxmlgenerator"
description = "Python bindings for XMLGenerator"
requires-python = ">=3.9"
readme = "../README.md"
authors = [
    { name = "Z M Williams", email = "z.m.will@icloud.com" },
]
license = { file = "../LICENSE" }
keywords = ["XML", "Testing"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "ruff>=0.12.7",
]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests"
]

[tool.ruff]
line-length = 88
indent-width = 4
target-version = "py312"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.coverage.run]
branch = true
command_line = "-m pytest"
omit = ["tests/*", "docs/*"]

[tool.coverage.report]
ignore_errors = true
fail_under = 80
skip_empty = true
exclude_also = [
    'def __repr__',
    'if self.debug:',
    'if settings.DEBUG',
    'raise AssertionError',
    'raise NotImplementedError',
    'if 0:',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
]

[tool.maturin]
features = ["pyo3/extension-module"]
